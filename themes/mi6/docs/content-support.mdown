# Content support

The following additional features are available for you as you write content.

## Lists

_What different list types are available_

### Check List

    :::haml
    %ul.check
      %li
        Buy groceries
      %li
        Cook food

### Code List

    :::haml
    %ul.code
      %li
        HTML is cool
      %li
        CSS is also cool

### Flag List

_A list with a flag title_

    :::haml
    .flag-list
      :markdown
        ### <span>Main text</span> some less prominent text

      %ul.code
        %li
          %a{ :href => 'http://example.com', :target => '_blank' }
            Some link text

### Image in article

_Image appropriate for an article_

- The class 'content-example' renders the style
- The class 'viewable-image' attaches the javascript gallery (lightbox-ish) functionality

    :::haml
    %a{ :href => '/path/to/full-img.png', :class => 'content-example viewable-image' }
      %img{ :alt => 'some alt', :src => '/path/to/small-img.png' }

# Features // Partials

## XP Graph

_Feature where you may present your knowledge/experience/passion about your subjects in a graph-ish way._

The value of each label should be what each bar should represent.

The value of data

- id # arbitrary ID to connect bars to subjects
- label # subject label (shown in bubble above the feature)
- bars # integer value, one of the following: 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100 | representing the filled up part of bar
- content # when switching subject, content will switch into this. String.

    :::ruby
    @xp_data = {
      :labels => [
        'Label 1',
        'Label 2',
        'Label 3'
      ],
      :data => [
        { :id => 'some_id',  :label => 'A label', :bar_1 => 80, :bar_2 => 70, :bar_3 => 20, :content => 'Some text' }
      ]
    }

## Related Links

_Feature that renders a list of links_

    :::ruby
    @related_links = [
      { :text => 'Some text', :href => 'http://example.com', :title => 'link title' }
    ]
